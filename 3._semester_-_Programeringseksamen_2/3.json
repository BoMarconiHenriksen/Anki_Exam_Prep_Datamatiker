{
    "__type__": "Deck", 
    "activeTags": [], 
    "children": [], 
    "crowdanki_uuid": "5d8b7100-664b-11e8-b33e-f0038c751458", 
    "deck_config_uuid": "5d8b7101-664b-11e8-b768-f0038c751458", 
    "deck_configurations": [
        {
            "__type__": "DeckConfig", 
            "autoplay": true, 
            "crowdanki_uuid": "0276ea21-6712-11e8-9280-94e9793d2471", 
            "dyn": false, 
            "lapse": {
                "delays": [
                    10
                ], 
                "leechAction": 0, 
                "leechFails": 8, 
                "minInt": 1, 
                "mult": 0.0
            }, 
            "maxTaken": 60, 
            "name": "Javascript", 
            "new": {
                "bury": false, 
                "delays": [
                    1, 
                    10
                ], 
                "initialFactor": 2500, 
                "ints": [
                    1, 
                    4, 
                    7
                ], 
                "order": 1, 
                "perDay": 20, 
                "separate": true
            }, 
            "replayq": true, 
            "rev": {
                "bury": false, 
                "ease4": 1.3, 
                "fuzz": 0.05, 
                "ivlFct": 1.0, 
                "maxIvl": 36500, 
                "minSpace": 1, 
                "perDay": 200
            }, 
            "timer": 0
        }
    ], 
    "desc": "", 
    "dyn": 0, 
    "extendNew": 10, 
    "extendRev": 50, 
    "inactiveTags": [
        "tråde"
    ], 
    "media_files": [], 
    "name": "3. semester - Programeringseksamen_2", 
    "note_models": [
        {
            "__type__": "NoteModel", 
            "crowdanki_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "css": ".card {\n font-family: arial;\n font-size: 20px;\n text-align: center;\n color: black;\n background-color: white;\n}\n", 
            "flds": [
                {
                    "font": "Arial", 
                    "media": [], 
                    "name": "Front", 
                    "ord": 0, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": false
                }, 
                {
                    "font": "Arial", 
                    "media": [], 
                    "name": "Back", 
                    "ord": 1, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": false
                }
            ], 
            "latexPost": "\\end{document}", 
            "latexPre": "\\documentclass[12pt]{article}\n\\special{papersize=3in,5in}\n\\usepackage[utf8]{inputenc}\n\\usepackage{amssymb,amsmath}\n\\pagestyle{empty}\n\\setlength{\\parindent}{0in}\n\\begin{document}\n", 
            "name": "Basic-0ee58", 
            "req": [
                [
                    0, 
                    "all", 
                    [
                        0
                    ]
                ]
            ], 
            "sortf": 0, 
            "tags": [
                "Rest"
            ], 
            "tmpls": [
                {
                    "afmt": "{{FrontSide}}\n\n<hr id=answer>\n\n{{Back}}", 
                    "bafmt": "", 
                    "bqfmt": "", 
                    "did": null, 
                    "name": "Card 1", 
                    "ord": 0, 
                    "qfmt": "{{Front}}"
                }
            ], 
            "type": 0, 
            "vers": []
        }
    ], 
    "notes": [
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvad er lifecycle methods?", 
                "Hver komponent har flere lifecycle methods, som du kan overskrive for at køre kode på bestemte tidspunkter i processen.<div><br /></div><div>Uddybning (Be)</div><div>Metoderne giver mulighed for er at bryde ind forskellige tidspunkter i et komponents livs cyklus .&nbsp;</div><div><br /></div><div>Mounting</div><div>er når man et komponent bliver lagt over i den virtuelle dom</div><div>metoder til mounting fasen:</div><div><div><div>&nbsp; &nbsp; componentConstructor&nbsp;</div><div>&nbsp; &nbsp; componentWillMount&nbsp;</div><div>&nbsp; &nbsp; componentDidMount</div><div>&nbsp; &nbsp; render</div><div><br /></div><div>Updating</div><div>hvis et komponent bliver updateret pga ændringer i props og state. Disse metoder bliver kaldt når et component bliver rerendered</div><div>&nbsp; &nbsp; componentWillReceiveProps</div><div>&nbsp; &nbsp; render</div><div>&nbsp; &nbsp; shouldComponentUpdate</div><div>&nbsp; &nbsp; componentWillUpdate</div><div>&nbsp; &nbsp; componentDidUpdate</div><div><br /></div><div>unmounting:</div><div>når et komponent bliver taget ud af den virtuelle dom.&nbsp;</div><div>&nbsp; &nbsp; componentWillUnmount</div><div><br /></div><div>errorhandling:</div><div>componentDidCatch</div><div><br /></div></div></div>"
            ], 
            "flags": 0, 
            "guid": "i?3!A7J;kS", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "lifecycle,", 
                "react"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvor mange hovedområder findes der inden for lifecycles? Og hvad hedder de?", 
                "1. Mounting(componetDidMount ved fetch pga asyncront).&nbsp;<div>2. Updating(componentWillReceiveProps).&nbsp;</div><div>3. Unmounting(componentWillUnmount).&nbsp;</div><div>4. Error Handling(componentDidCatch).</div>"
            ], 
            "flags": 0, 
            "guid": "rUO{p@W53h", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "lifecycle,", 
                "react"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvad betyder lifting state up?", 
                "Data flyder en vej(ovenfra og ned) - normalt bruges Redux eller Mobx."
            ], 
            "flags": 0, 
            "guid": "fCYlDL_f;%", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "react"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvad er Babel?", 
                "Babel er en JavaScript compiler.<div><br /><div>Vi skriver koden i es(echma script) 6 og 7 og så transpiler Babel det ned til es5.</div><div><br /></div><div>Sagt på en anden måde vi putter next generation javascript ind og får browser kompatibel javascript kode ud. (from babeljs.io)</div><div><br /></div></div>"
            ], 
            "flags": 0, 
            "guid": "fpAN}e]]74", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "react"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvad er JSX?", 
                "Det er er den måde man koder html i react. JSX oversættes til rigtig html via Babel.<div><br /></div><div>- en syntaktisk udvidelse til JavaScript. Det er React's anbefalede måde at beskrive hvordan et userinterface skal se ud.&nbsp;</div><div>- JSX producerer React elementer som kan bliver renderet af React.&nbsp;</div>"
            ], 
            "flags": 0, 
            "guid": "zIyJj/vP:o", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "react"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvordan styler man i JSX?", 
                "Styles sættes inline i jsx eller i et js objekt(dynamisk styling)."
            ], 
            "flags": 0, 
            "guid": "rNn}%a2?QG", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "react"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvad er komponenter i React?", 
                "Komponenter gør det muligt at splitte UI ind i uafhængige genbrugelige byggesten.<div><div><br /></div><div>Komponenter er som javascript funktioner men med en render funktion.<br /><div><br /></div><div>De kan modtage vilkårligt input kaldet props og returnere React elements som beskriver hvad der skal vises på skærmen. &lt;MyComponent /&gt; (stort startbogstav vigtigt da det adskiller det fra alm. html-tags). Kan også skrives som &lt;MyComponent&gt;&lt;/MyComponent&gt;</div><div><br /></div><div>Der er to slags komponenter: funktionelle komponenter og klasse komponenter.&nbsp;</div></div></div>"
            ], 
            "flags": 0, 
            "guid": "A:.,DaKi8G", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "react"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvordan laves komponenter?", 
                "Komponenter kan laves som både en class eller en funktionel komponent."
            ], 
            "flags": 0, 
            "guid": "DUL{{rpWt8", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "react"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvornår vil man lave en komponent som en class?", 
                "Hvis du har brug for state eller lifecycle methods eller adgang til this, så skal du bruge en klasse.<div><br /></div><div>Ellers brug et funktionelt komponent af den simple grund at det er simplere kode.&nbsp;</div><div><br /></div><div>React er generelt bare ikke glad for at der er ubrugte komponenter eller features og der kommer advarsler i console hvis man lavet et komponent som klasse men ikke bruger hverken this, state eller lifecyclemethods.&nbsp;</div>"
            ], 
            "flags": 0, 
            "guid": "o/pU#Oo)f}", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "react"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvornår laver man en funktionel komponent?", 
                "Når der ikke bruges this, state eller lifecycle methods dvs den funktionelle komponent ikke er afhængig af noget."
            ], 
            "flags": 0, 
            "guid": "mEAQL^+]P!", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "react"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvad kan komponenter sammenlignes med?", 
                "Komponenter er ligesom funktioner i javascript. De kan også tage input(parameter) kaldet props."
            ], 
            "flags": 0, 
            "guid": "Ph6dDQK%h$", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "react"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvad er props?", 
                "Props indeholder data, som kan gives videre til en komponent ligesom en funktion, der får et parameter."
            ], 
            "flags": 0, 
            "guid": "p32mj]m.@4", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "react"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvad er vigtigt at huske på ved props?", 
                "Det er read-only!"
            ], 
            "flags": 0, 
            "guid": "eD2/)csL8)", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "react"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvordan kan man se, at det er en komponent?", 
                "Komponenter starter altid med stort bogstav."
            ], 
            "flags": 0, 
            "guid": "K_AE)tr-p(", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "react"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvad er fordelen ved funktionel programmering i React?", 
                "Data flyder kun en vej. Nedad. Det kræver mere kode men, er lettere at vedligeholde."
            ], 
            "flags": 0, 
            "guid": "wc.F5}OA`K", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "react"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvornår bruger vi state?", 
                "State bruges, hvis vi har behov for at ændre data eller vise ny data."
            ], 
            "flags": 0, 
            "guid": "maXN[)uj)P", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "react"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvordan sættes state?", 
                "Det sættes i konstruktøren(som objekt) eller i metoden setState() uden for konstruktøren."
            ], 
            "flags": 0, 
            "guid": "ij!(MLJ:j@", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "react"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvad sker der når man har sat state i setState()?&nbsp;", 
                "Når state er sat kaldes render metoden."
            ], 
            "flags": 0, 
            "guid": "u!pV|a<DTI", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "react"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Skal man altid bruge state?", 
                "Kan du leve uden state, så gør det!"
            ], 
            "flags": 0, 
            "guid": "eO{H_uL(BK", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "react"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvad er kende tegnet ved Mobx?", 
                "Det er objekt orienteret, og bruger anoteringer."
            ], 
            "flags": 0, 
            "guid": "DfwFh;(neo", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "react"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvad er kendetegnet ved Redux?", 
                "Det er funktionel(ny tilstand), og bruges ved størrer programmer."
            ], 
            "flags": 0, 
            "guid": "Ah-w$k)I@=", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "react"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvornår bruges lifecycles?", 
                "Når du extender components så kan du overskrive metoderne. React kalder metoderne for dig."
            ], 
            "flags": 0, 
            "guid": "L!ajk]qG}4", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "react"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvad gør keys i en tabel?", 
                "En key identificer entydigt rækken i en tabel."
            ], 
            "flags": 0, 
            "guid": "Pr%uz/Uq$+", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "react"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Skal man bruge id når man bruger key?", 
                "Nej, det vigtigst er at der ikke bruges samme tal eller bogstav til at identificere rækken."
            ], 
            "flags": 0, 
            "guid": "e14X&gl}9m", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "react"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvad er single source of truth?", 
                "Det er når en komponent, der render en form også kontroller, hvad der sker i formen ved bruger input."
            ], 
            "flags": 0, 
            "guid": "dMa&`A8Y%#", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "react"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvad kaldes&nbsp;single source of truth også?", 
                "single source of truth kaldes også controlled input."
            ], 
            "flags": 0, 
            "guid": "FjXr0Hwk@-", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "react"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvad er 2 way binding?", 
                "Det som skrives i et input felt afspejles i state dvs render kaldes og opdater."
            ], 
            "flags": 0, 
            "guid": "olSl4Z_#Br", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "react"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvad kan 2 ways binding bruges til?", 
                "Det kan bl.a. bruges til debug."
            ], 
            "flags": 0, 
            "guid": "u*joL>;Tns", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "react"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvad får værdi ved en 2 ways binding?", 
                "Det gør inputfeltet."
            ], 
            "flags": 0, 
            "guid": "d;~`HUr1^F", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "react"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvad bruges bind til?", 
                "Den fortæller hvilken this, der skal bruges."
            ], 
            "flags": 0, 
            "guid": "BrBa(U_{=_", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "react"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvordan anbefales det at lave en eventhandler?", 
                "En eventhandler laves med en arrowfuntion, så behøver du ikke at binde."
            ], 
            "flags": 0, 
            "guid": "kAH>zVIV:R", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "react"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Kan man lave en eventhandler med en almindelig funktion?", 
                "Ja, så skal man bare huske at bruge bind."
            ], 
            "flags": 0, 
            "guid": "wc%lPOdQIc", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "react"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvornår kan man med fordel bruge props?", 
                "Når data ikke ændrer sig."
            ], 
            "flags": 0, 
            "guid": "rx51tkxEsD", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "react"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Er React og React Native det samme?", 
                "Nej, men det ligner hinanden meget.<div><br /></div><div>React er til webapps og React Native er til mobilapps.&nbsp;</div><div><br /></div><div>De bruger begge to javascript som funktionelt grundlag men renderingsmetoder er lidt forskellige.&nbsp;</div><div><br /></div><div>Eksempelvis kan man bruge htmls div tags i react til at rumme alle andre grupper af tags og p-tags til tekst mens man skal bruge tagsene View til rundt om andre tags og Text om tekst.&nbsp;</div>"
            ], 
            "flags": 0, 
            "guid": "uF;Qa>toxF", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "react"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvad er fordelen ved SPA?", 
                "- Hurtigere.<div>- HTML 5 er designet til SPA.</div><div>- Du får en offline appmed local storage, hvor du kan gemme data lokalt.</div><div>- Transitions mellem sider.</div><div>- Pænt og glidende - ingen ventetid.</div><div>- Backend kan genbruges af andre klienter.</div>"
            ], 
            "flags": 0, 
            "guid": "f%!0@R2GK?", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "react"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvad er ulempen ved SPA?", 
                "- Lang load på første side.<div>- SEO (Search engine optimization) svært.</div><div>- JS skal være enabled.</div><div>- SPA mindre sikkert dog brug rigtigt framework.</div><div>- Memory leaks.</div>"
            ], 
            "flags": 0, 
            "guid": "Md<h[rR|D{", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "react"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvorfor skal es6 og es7 transpileres med Babel?", 
                "Det transpileres med Babel til es5 som alle browsere kan håndtere."
            ], 
            "flags": 0, 
            "guid": "FLvLmAD2u>", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "react"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvad indeholder React dom?", 
                "React dom indeholder the virtual dom.<div><br /></div><div>The Dom er basalt set et træ af noder som lister elementer og deres attrubutter og indhold &nbsp;som objekter og egenskaber (properties) .&nbsp;</div><div><br /></div><div>Når render() metoden køres bliver der skal skabt et Virtuel dom træ fra react componenterne og træet bliver opdateteret som svar på de ændringer i data modellen som sker på grund af handlinger.&nbsp;</div><div><br /></div>"
            ], 
            "flags": 0, 
            "guid": "ErgadCWGBh", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "react"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvad gør the virtual dom?", 
                "Den opdaterer en del af dommen for at få ændringer med. Kan abstrahere væk fra den rigtige dom."
            ], 
            "flags": 0, 
            "guid": "yb/fCJu?Wt", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "react"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvilken vej skal data flyde i React?", 
                "Data skal kun flyde en vej. Oppefra og ned. Callback kan føre ændringer tilbage."
            ], 
            "flags": 0, 
            "guid": "Aoyj;|xl.6", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "react"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvad er en callback?", 
                "I js kan en funktion tage en anden funktion som argument, da en funktion er et objekt."
            ], 
            "flags": 0, 
            "guid": "N3O,Q4CC_E", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "react"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvad kaldes en funktion, der returner en anden funktion også?", 
                "En higher-order function."
            ], 
            "flags": 0, 
            "guid": "vDd})C$kd&", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "react"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvad bruges callbacks til?", 
                "Js er et event driven sprog. Det beyder at i stedet for at vente på et svar så fortsætter den, mens den lytter efter andre events."
            ], 
            "flags": 0, 
            "guid": "J*{HLTOU8H", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "react"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvad indeholder JSX?", 
                "- Js og HTML sammen.<div>- Js objekter.</div><div>- styles som objekter.</div>"
            ], 
            "flags": 0, 
            "guid": "vR%9]BU;)/", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "react"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvordan udføres kode?", 
                "Kode udføres linært<div><br /></div><div>i Tråd programmering kan flere tråde køres samtidigt og derved udnytte at der er flere processorer og derved spare tid.&nbsp;</div><div><br /></div><div>Problemet er bare at de tråde der kører samtidigt kan risikere at blive flettet ind i hinanden med et uforudsigeligt resultat til følge. (race condition)</div>"
            ], 
            "flags": 0, 
            "guid": "e-k/v*lWvj", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "tråde"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvordan kører en javaapplikation(ifm tråde)?", 
                "En java applikation kører som en single process, og hver proces kan have flere tråde. Hver proces har en heap, og hver tråd har en tråd stack."
            ], 
            "flags": 0, 
            "guid": "xMd^(R70z<", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "tråde"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvad er udfordringen når du kun har en tråd, og den tråd f.eks. henter data?", 
                "Hvis main thread skal vente på at hente data, kan der ikke udføres anden kode, før den er færdig."
            ], 
            "flags": 0, 
            "guid": "G!w;5hg>7B", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "tråde"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvad er fordelen ved at have flere tråde?", 
                "Hvis du har en ekstra tråd kan du give den tråd besked på at udfører opgaven, mens main tråden så kan udfører en anden opgave.<div><br /></div><div>øget udnyttelse af computerens ressourcer</div>"
            ], 
            "flags": 0, 
            "guid": "l[FP+{V[<y", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "tråde"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Kræver en API at vi giver den en tråd?", 
                "Ja, en API kræver at den får sin egen tråd, eller vil programmet vente med at udføre alle andre opgaver."
            ], 
            "flags": 0, 
            "guid": "PcnVIKb_y4", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "tråde"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvad er concurrency?", 
                "Concurrency er, når en applikation gør mere end en ting ad gangen.<div><br /></div><div>(samtidighed)</div>"
            ], 
            "flags": 0, 
            "guid": "DEZ~iNW/Pl", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "tråde"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Gør concurrency at et program kan gøre flere ting samtidig?", 
                "Concurrency gør, at programmet begynder at arbejde på mere end en opgave, hvis der er flere processorer.&nbsp;<div><br /></div><div>En opgave der bruger en processor/ressource skal være slut før at en anden kan starte på den samme processor.</div>"
            ], 
            "flags": 0, 
            "guid": "O+mSSkqqFU", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "tråde"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvordan laves en thread?", 
                "Det kommer an på om du har brugt Extends Threads eller implements Runnable.&nbsp;<div><br /></div><div>Den første kræver at du laver en instans af Thread for hver gang du skal bruge dit trådobjekt den anden gør at du kan genbruge samme instans af det pågældende trådobjekt.&nbsp;</div>"
            ], 
            "flags": 0, 
            "guid": "K1Ze=_s2Xf", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "tråde"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvad er runnable and thread?", 
                "Det er et interface.<div><br /></div><div>Runnable er et interface der kan implementeres.</div><div>Thread er en klasse der kan extendes.&nbsp;</div><div><br /></div><div><div>\"implements Runnable\" is the superior object oriented pattern: Composition, not inheritance, more accurately defines the relationships between your objects.</div><div><br /></div><div>There are several other reasons to prefer \"implements Runnable:\"</div><div><br /></div><div>Other APIs in Java accept work as Runnable and not specializations of the Thread class.</div><div><br /></div><div>Defining your work as Runnable doesn't wed your work to the Thread object. In the future, you might want to hand your work to some other execution abstraction.</div><div><br /></div><div>Java doesn't support multiple inheritance, so if your class already extends an object, you can't also extend Thread.</div><div><br /></div><div>By implementing Runnable, multiple threads can share an instance of your work. If you extended Thread, you'd have to create a new instance of your work for each thread.</div></div>"
            ], 
            "flags": 0, 
            "guid": "o_s^H5fsvT", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "tråde"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvad er fordelen ved runnable and thread?", 
                "Fordelen ved runnable and thread er, at man kun skal bruge en metode for at lave en tråd."
            ], 
            "flags": 0, 
            "guid": "gMB-5W7|8P", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "tråde"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvilken type runnable bruger vi når man skal lave en tråd?", 
                "Når vi skal lave en tråd i runnable bruger vi for det mest anonym runnable, da den er mere fleksibel."
            ], 
            "flags": 0, 
            "guid": "c2aY*}QDv]", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "tråde"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "I runnable and thread hvilken metode implementerer vi?", 
                "I runnable and thread implementerer vi run metoden. Det er JVM, der kalder run metoden for os."
            ], 
            "flags": 0, 
            "guid": "hWZhO7k$=#", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "tråde"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "I runable og thread interfacet, hvordan starter vi tråden?", 
                "I runable og thread starter vi metoden med start metoden."
            ], 
            "flags": 0, 
            "guid": "d4@`K$7@Zm", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "tråde"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvad gør sleep?", 
                "Sleep får en tråd til, at vente med at blive udført.<div><br /></div><div>og kaster en interupted exception hvis den ikke kan komme til at komme igang igen efter den tid den skulle 'sove'</div>"
            ], 
            "flags": 0, 
            "guid": "pea%3K+Af`", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "tråde"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvorfor interrupter vi en tråd?", 
                "Vi interupter en tråd når vi vil have den til at stoppe med, hvad den gør, for at gøre noget andet. Typisk hvis vi vil terminate den."
            ], 
            "flags": 0, 
            "guid": "j67;4P>)[-", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "tråde"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvor mange måder er der at interupte en tråd på?", 
                "Der er 2 måder at interupte en tråd på.<div><br /><div>1. Catch den interupted exception. Interrupted exception bliver kastet når man bruger thread.sleep(n)&nbsp;</div><div><br /></div><div>2.&nbsp;public void interrupt() som er en metode i tråd klassen og kaldes med tn.interupt()</div><div><div>public static boolean interrupted()</div><div>public boolean isInterrupted()</div></div></div><div><div><br /></div><div>The isInterrupted() method returns the interrupted flag either true or false. The static interrupted() method returns the interrupted flag afterthat it sets the flag to false if it is true.</div></div><div><br /></div><div>3. system.exit(0) stopper det også men har ikke noget med trådprogrammering som sådan at gøre.&nbsp;</div>"
            ], 
            "flags": 0, 
            "guid": "zY4NVTtPxf", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "tråde"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Hvad gør join ifm tråde?", 
                "Når en tråd joiner en anden tråd, så venter den første tråd, indtil den anden tråd har udført sit job."
            ], 
            "flags": 0, 
            "guid": "x|(GIC@#ng", 
            "note_model_uuid": "5d8b7104-664b-11e8-9224-f0038c751458", 
            "tags": [
                "tråde"
            ]
        }
    ]
}